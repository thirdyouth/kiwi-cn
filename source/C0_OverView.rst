---------------------------------
概览
---------------------------------

.. hint::

   **摘要**

   本文提供有关基于 kiwi 创建镜像的步骤的概览。在文档中，对基于 kiwi 9.15.1 构建系统镜像过程中的流程和内容相关的术语也做了讲解。

内容概览
=================================

一个系统镜像（通常称为 “镜像”），是一个 *完整安装* 的 Linux 系统构成的单独文件。该镜像代表一个操作系统，同时，还包括 “最终” 配置。

KIWI 通过一下两个步骤创建镜像：

1. 第一步，*准备操作* ，利用镜像描述文件中提供的信息生成一个所谓的 *未打包镜像树* （目录）。
2. 第二步，*创建操作* ，在未打包镜像基础上，利用配置文件中提供的信息创建一个指定格式的 *打包镜像* 或者 *镜像* 。

通过 KIWI ,镜像的创建流程自动完成，必须要任何用户交互。镜像创建流程所需要的信息由景象描述文件提供。

基本术语
=================================

实例
-------------------------------------

实例是开箱可用的操作系统镜像，包括特定应用场景的预配置应用程序。实例以镜像文件形式提供，并且需要在目标系统或者服务上部署和激活。

镜像
-------------------------------------

KIWI 构建过程的最终结果。

镜像描述
-------------------------------------

定义实例的详细说明。镜像描述是一个目录中的可读文件集合。至少包括一个 XML 文件 config.xml 或者 .kiwi 。并且可能还存在其他的文件，如脚本或者配置数据。这些可用于定制 KIWI 构建过程或者镜像初始化启动流程。

覆盖文件
-------------------------------------

一个包含文件或者子目录的目录结构，属于镜像描述的一部分。该目录结构打包为一个文件 root.tar.gz 或者保存在一个名称为 root 的目录。该目录结构中的内容会被拷贝（覆盖）到实例 root 的文件系统。其中一并包含相应的权限和属性。

KIWI
-------------------------------------

OS 实例构建工具。

虚拟化技术
-------------------------------------

软件模拟的计算机硬件。一个虚拟机表现为一个真实的电脑，但是与物理硬件相隔离。在本文中，使用的是 Qemu 虚拟系统。

系统要求
=================================

KIWI 的使用和运行，需要以下要求：

* 近期 Linux 发行版，详情查看 `支持发行版 <https://suse.github.io/kiwi/building.html#supported-distributions>`_ 。同时如果在容器中运行 KIWI，则需要该发行版支持 docker 容器系统。查看： `自包含环境构建 <https://suse.github.io/kiwi/building/build_containerized.html#container-building>`_

* 足够磁盘空间用于构建和保存镜像。推荐最少 10GB 空间。

* Python 版本 2.7/3.4 及更高版本；KIWI 支持两种 Python 版本，本指南中的信息适用于两个包，可以是 python3-kiwi 或者 python2-kiwi 。

* Git （包 git-core） 下载仓库。

* 启动镜像的虚拟化技术。推荐 QEMU 。